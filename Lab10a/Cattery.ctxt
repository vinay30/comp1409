#BlueJ class context
comment0.params=
comment0.target=Cattery()
comment0.text=\n\ Default\ Constructor\ for\ objects\ of\ class\ Cattery\n
comment1.params=businessName
comment1.target=Cattery(java.lang.String)
comment1.text=\n\ Non-default\ Constructor\ for\ objects\ of\ class\ Cattery\n\n\ @param\ businessName\ A\ parameter\ containing\ the\ new\ business\ name\ of\ the\ cattery\n
comment2.params=
comment2.target=java.lang.String\ getBusinessName()
comment2.text=\n\ Method\ getBusinessName\ which\ returns\ the\ business\ name\ of\ the\ cattery\n\n\ @return\ The\ return\ value\ which\ is\ a\ string\ of\ the\ business\ name\ of\ the\ cattery\n
comment3.params=businessName
comment3.target=void\ setBusinessName(java.lang.String)
comment3.text=\n\ Method\ setBusinessName\ which\ takes\ a\ new\ business\ name\ parameter,\ then\ validates\ it\ and\ sets\ the\n\ business\ name\ of\ the\ cattery\ using\ the\ parameter.\n\ If\ the\ business\ name\ fails\ validation,\ an\ error\ message\ is\ displayed\n\n\ @param\ businessName\ A\ parameter\ containing\ the\ new\ business\ name\n
comment4.params=newCat
comment4.target=void\ addCat(Cat)
comment4.text=\n\ Method\ addCat\ which\ validates\ the\ passed\ in\ cat\ object,\ then\ adds\ it\ to\ the\ end\ of\ the\ cats\ arraylist\n\ If\ the\ cat\ object\ fails\ validation,\ an\ error\ message\ is\ displayed\n\n\ @param\ newCat\ A\ parameter\ containing\ a\ cat\ object\ to\ be\ added\ to\ the\ cats\ arraylist\n
comment5.params=catIndex
comment5.target=void\ getCat(int)
comment5.text=\n\ Method\ getCat\ which\ uses\ a\ passed\ in\ parameter\ containing\ an\ arraylist\ index\ to\ retrieve\ the\ object\n\ at\ the\ specified\ index\ from\ the\ cats\ arraylist.\ The\ parameter\ is\ validated\ before\ being\ used.\n\ If\ the\ index\ in\ the\ parameter\ fails\ validation,\ an\ error\ message\ is\ displayed\n\n\ @param\ catIndex\ A\ parameter\ containing\ the\ index\ of\ the\ cats\ arraylist\n
comment6.params=catIndex
comment6.target=void\ removeCat(int)
comment6.text=\n\ Method\ removeCat\ which\ uses\ a\ passed\ in\ parameter\ containing\ an\ arraylist\ index\ to\ remove\ the\ object\n\ at\ the\ specified\ index\ from\ the\ cats\ arraylist.\ The\ parameter\ is\ validated\ before\ being\ used.\n\ If\ the\ index\ in\ the\ parameter\ fails\ validation,\ an\ error\ message\ is\ displayed\n\n\ @param\ catIndex\ A\ parameter\ containing\ the\ index\ of\ the\ cats\ arraylist\n
comment7.params=
comment7.target=void\ displayAllCats()
comment7.text=\n\ Method\ displayAllCats\ which\ iterates\ through\ each\ object\ in\ the\ cats\ arraylist\ and\ displays\n\ each\ cat\ name\ on\ the\ screen.\ In\ this\ way,\ we\ see\ a\ list\ of\ all\ cat\ names\ in\ the\ cattery.\n\n
comment8.params=args
comment8.target=void\ main(java.lang.String[])
comment8.text=\n\ Method\ main\ which\ contains\ all\ statements\ that\ should\ be\ evaluated\ when\ the\ program\ is\ first\ run\n\n\ @param\ args\ A\ parameter\ containing\ arguments\ for\ the\ main\ method\ code\n
numComments=9
